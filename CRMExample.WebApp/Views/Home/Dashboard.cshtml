@*@inject CRMExample.Services.ILogService _logService
@model CRMExample.Models.DashboardModel*@

@{
    ViewData["Title"] = "Dashboard";
    ViewData["PageName"] = "home-dashboard";

    //int userId = ViewContext.HttpContext.Session.GetInt32(Constants.Session_Id).GetValueOrDefault();
    //var logs = _logService.ListByUserId(userId).Take(10).ToList();
}

<div class="row">
    <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
        <div class="card">
            <div class="card-header p-3 pt-2">
                <div class="icon icon-lg icon-shape bg-gradient-dark shadow-dark text-center border-radius-xl mt-n4 position-absolute">
                    <i class="material-icons opacity-10">check</i>
                </div>
                <div class="text-end pt-1">
                    <p class="text-sm mb-0 text-capitalize">Yeni Görev(Bugün)</p>
                    <h4 class="mb-0"><span class="text-success">@Model.TodayCompletedIssueCount</span> / @Model.TodayIssueCount</h4>
                </div>
            </div>
            <hr class="dark horizontal my-0">
            <div class="card-footer p-3">
                <p class="mb-0">Dün'e göre <span class="text-@(Model.IssueRateByYesterday > 0 ? "success" : "danger") text-sm font-weight-bolder">@Model.IssueRateByYesterday% </span></p>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
        <div class="card">
            <div class="card-header p-3 pt-2">
                <div class="icon icon-lg icon-shape bg-gradient-primary shadow-primary text-center border-radius-xl mt-n4 position-absolute">
                    <i class="material-icons opacity-10">person</i>
                </div>
                <div class="text-end pt-1">
                    <p class="text-sm mb-0 text-capitalize">Yeni Müşteri(Bugün)</p>
                    <h4 class="mb-0">@Model.TodayClientCount</h4>
                </div>
            </div>
            <hr class="dark horizontal my-0">
            <div class="card-footer p-3">
                <p class="mb-0">Dün'e göre <span class="text-@(Model.ClientRateByYesterday > 0 ? "success" : "danger") text-sm font-weight-bolder">@Model.ClientRateByYesterday% </span></p>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
        <div class="card">
            <div class="card-header p-3 pt-2">
                <div class="icon icon-lg icon-shape bg-gradient-success shadow-success text-center border-radius-xl mt-n4 position-absolute">
                    <i class="material-icons opacity-10">people</i>
                </div>
                <div class="text-end pt-1">
                    <p class="text-sm mb-0 text-capitalize">Toplam Müşteri</p>
                    <h4 class="mb-0"><span class="text-danger">@Model.ThisYearClientCount</span> / @Model.TotalClientCount</h4>
                </div>
            </div>
            <hr class="dark horizontal my-0">
            <div class="card-footer p-3">
                <p class="mb-0">Geçen yıl'a göre <span class="text-@(Model.ClientRateByLastYear > 0 ? "success" : "danger") text-sm font-weight-bolder">@Model.ClientRateByLastYear%</span></p>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-sm-6">
        <div class="card">
            <div class="card-header p-3 pt-2">
                <div class="icon icon-lg icon-shape bg-gradient-info shadow-info text-center border-radius-xl mt-n4 position-absolute">
                    <i class="material-icons opacity-10">money</i>
                </div>
                <div class="text-end pt-1">
                    <p class="text-sm mb-0 text-capitalize">Tahsilat(Bugün)</p>
                    <h4 class="mb-0">@Model.TodayCompletedLeadSum.ToString("C0")</h4>
                </div>
            </div>
            <hr class="dark horizontal my-0">
            <div class="card-footer p-3">
                <p class="mb-0">Dün'e göre <span class="text-@(Model.CompletedLeadPriceRateByYesterday > 0 ? "success" : "danger") text-sm font-weight-bolder">@Model.CompletedLeadPriceRateByYesterday% </span></p>
            </div>
        </div>
    </div>
</div>
<div class="row mt-4">
    <div class="col-lg-4 col-md-6 mt-4 mb-4">
        <div class="card z-index-2 ">
            <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2 bg-transparent">
                <div class="bg-gradient-primary shadow-primary border-radius-lg py-3 pe-1">
                    <div class="chart">
                        <canvas id="chart-bars" class="chart-canvas" height="170"></canvas>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <h6 class="mb-0 ">Haftalık Müşteri Analizi</h6>
                <p class="text-sm ">Haftalık müşteri artış / azalış grafiği</p>
                <hr class="dark horizontal">
                @*<div class="d-flex ">
                        <i class="material-icons text-sm my-auto me-1">schedule</i>
                        <p class="mb-0 text-sm"> campaign sent 2 days ago </p>
                    </div>*@
            </div>
        </div>
    </div>
    <div class="col-lg-4 col-md-6 mt-4 mb-4">
        <div class="card z-index-2  ">
            <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2 bg-transparent">
                <div class="bg-gradient-success shadow-success border-radius-lg py-3 pe-1">
                    <div class="chart">
                        <canvas id="chart-line" class="chart-canvas" height="170"></canvas>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <h6 class="mb-0 ">Aylık Müşteri Analizi</h6>
                <p class="text-sm ">Aylık müşteri artış / azalış grafiği</p>
                <hr class="dark horizontal">
                @*<div class="d-flex ">
                        <i class="material-icons text-sm my-auto me-1">schedule</i>
                        <p class="mb-0 text-sm"> updated 4 min ago </p>
                    </div>*@
            </div>
        </div>
    </div>
    <div class="col-lg-4 mt-4 mb-3">
        <div class="card z-index-2 ">
            <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2 bg-transparent">
                <div class="bg-gradient-dark shadow-dark border-radius-lg py-3 pe-1">
                    <div class="chart">
                        <canvas id="chart-line-tasks" class="chart-canvas" height="170"></canvas>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <h6 class="mb-0 ">Aylık Tahsilat Analizi</h6>
                <p class="text-sm ">Aylık tahsilat artış / azalış grafiği</p>
                <hr class="dark horizontal">
                @*<div class="d-flex ">
                        <i class="material-icons text-sm my-auto me-1">schedule</i>
                        <p class="mb-0 text-sm">just updated</p>
                    </div>*@
            </div>
        </div>
    </div>
</div>
<div class="row mb-4">
    <div class="col-lg-8 col-md-6 mb-md-0 mb-4">
        <div class="card">
            <div class="card-header pb-0">
                <div class="row">
                    <div class="col-lg-6 col-7">
                        <h6>Talepler</h6>
                        <p class="text-sm mb-0">
                            <i class="fa fa-check text-info" aria-hidden="true"></i>
                            Bu ay <span class="font-weight-bold ms-1">@Model.CompletedLeadCountForThisMonth adet tamamlandı.</span>
                        </p>
                    </div>
                    @*<div class="col-lg-6 col-5 my-auto text-end">
                            <div class="dropdown float-lg-end pe-4">
                                <a class="cursor-pointer" id="dropdownTable" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fa fa-ellipsis-v text-secondary"></i>
                                </a>
                                <ul class="dropdown-menu px-2 py-3 ms-sm-n4 ms-n5" aria-labelledby="dropdownTable">
                                    <li><a class="dropdown-item border-radius-md" href="javascript:;">Action</a></li>
                                    <li><a class="dropdown-item border-radius-md" href="javascript:;">Another action</a></li>
                                    <li><a class="dropdown-item border-radius-md" href="javascript:;">Something else here</a></li>
                                </ul>
                            </div>
                        </div>*@
                </div>
            </div>
            <div class="card-body px-0 pb-2">
                <div class="table-responsive">
                    <table class="table align-items-center mb-0">
                        <thead>
                            <tr>
                                <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Müşteriler</th>
                                <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Temsilci</th>
                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Teklif Bedeli</th>
                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Durum</th>
                            </tr>
                        </thead>
                        <tbody>
                            @*@foreach (var lead in Model.Last10Leads)
                            {
                                string badgeColor = "secondary";
                                string badgeText = string.Empty;

                                switch (lead.Type)
                                {
                                    case SupperCRMExample.Entities.LeadType.Waiting:
                                        badgeColor = "primary";
                                        badgeText = "Bekliyor";
                                        break;
                                    case SupperCRMExample.Entities.LeadType.Offered:
                                        badgeColor = "info";
                                        badgeText = "Tekliflendi";
                                        break;
                                    case SupperCRMExample.Entities.LeadType.ToCall:
                                        badgeColor = "warning";
                                        badgeText = "Aranacak";
                                        break;
                                    case SupperCRMExample.Entities.LeadType.OnSale:
                                        badgeColor = "secondary";
                                        badgeText = "Satışta";
                                        break;
                                    case SupperCRMExample.Entities.LeadType.Completed:
                                        badgeColor = "success";
                                        badgeText = "Tamamlandı";
                                        break;
                                    default:
                                        badgeColor = "secondary";
                                        badgeText = "---";
                                        break;
                                }

                                <tr>
                                    <td>
                                        <div class="d-flex px-2 py-1">
                                            <div>
                                                <i class="fa fa-check me-2"></i>
                                            </div>
                                            <div class="d-flex flex-column justify-content-center">
                                                <h6 class="mb-0 text-sm">@lead.Client.Name</h6>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="avatar-group mt-2">
                                            <a href="javascript:;" class="avatar avatar-xs rounded-circle me-2" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Ryan Tompson">
                                                <span class="text-sm text-secondary ms-2">@lead.User.Name</span>
                                            </a>
                                        </div>
                                    </td>
                                    <td class="align-middle text-center text-sm">
                                        <span class="text-xs font-weight-bold">@lead.Price.ToString("C0")</span>
                                    </td>
                                    <td class="align-middle text-center">
                                        <span class="badge badge-sm bg-gradient-@badgeColor">@badgeText</span>
                                    </td>
                                </tr>
                            }*@
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-4 col-md-6">
        <div class="card h-100">
            <div class="card-header pb-0">
                <h6>Son Yapılan Sistem Girişleri</h6>
                @*<p class="text-sm">
                        <i class="fa fa-arrow-up text-success" aria-hidden="true"></i>
                        <span class="font-weight-bold">24%</span> this month
                    </p>*@
            </div>
            <div class="card-body p-3">
                <div class="timeline timeline-one-side">
                    @*@if (logs != null && logs.Count > 0)
                    {
                        @foreach (var item in logs)
                        {
                            <div class="timeline-block mb-3">
                                <span class="timeline-step">
                                    <i class="material-icons text-primary text-gradient">key</i>
                                </span>
                                <div class="timeline-content">
                                    <h6 class="text-dark text-sm font-weight-bold mb-0">@item.Text</h6>
                                    <p class="text-secondary font-weight-bold text-xs mt-1 mb-0">@item.CreatedAt</p>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="timeline-block mb-3">
                            <span class="px-4 text-sm font-weight-bold">Herhangi bir sistem giriş kaydı bulunamadı.</span>
                        </div>
                    }*@
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/assets/js/plugins/chartjs.min.js"></script>
    <script>
        var ctx = document.getElementById("chart-bars").getContext("2d");

        @*new Chart(ctx, {
            type: "bar",
            data: {
                labels: [@Html.Raw(string.Join(",", Model.ClientCountForLastWeek.Reverse().Select(x => "'" + x.Key + "'").ToArray()))],
                datasets: [{
                    label: "Müşteri Sayısı",
                    tension: 0.4,
                    borderWidth: 0,
                    borderRadius: 4,
                    borderSkipped: false,
                    backgroundColor: "rgba(255, 255, 255, .8)",
                    data: [@string.Join(",", Model.ClientCountForLastWeek.Reverse().Select(x => x.Value).ToArray())],
                    maxBarThickness: 6
                },],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false,
                    }
                },
                interaction: {
                    intersect: false,
                    mode: 'index',
                },
                scales: {
                    y: {
                        grid: {
                            drawBorder: false,
                            display: true,
                            drawOnChartArea: true,
                            drawTicks: false,
                            borderDash: [5, 5],
                            color: 'rgba(255, 255, 255, .2)'
                        },
                        ticks: {
                            suggestedMin: 0,
                            suggestedMax: 500,
                            beginAtZero: true,
                            padding: 10,
                            font: {
                                size: 14,
                                weight: 300,
                                family: "Roboto",
                                style: 'normal',
                                lineHeight: 2
                            },
                            color: "#fff"
                        },
                    },
                    x: {
                        grid: {
                            drawBorder: false,
                            display: true,
                            drawOnChartArea: true,
                            drawTicks: false,
                            borderDash: [5, 5],
                            color: 'rgba(255, 255, 255, .2)'
                        },
                        ticks: {
                            display: true,
                            color: '#f8f9fa',
                            padding: 10,
                            font: {
                                size: 14,
                                weight: 300,
                                family: "Roboto",
                                style: 'normal',
                                lineHeight: 2
                            },
                        }
                    },
                },
            },
        });*@


        var ctx2 = document.getElementById("chart-line").getContext("2d");

        new Chart(ctx2, {
            type: "line",
            data: {
                @*labels: [@Html.Raw(string.Join(",", Model.ClientCountForLastYear.Reverse().Select(x => "'" + System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(x.Key).Substring(0,3).ToUpper() + "'").ToArray()))],*@
                datasets: [{
                    label: "Müşteri Sayısı",
                    tension: 0,
                    borderWidth: 0,
                    pointRadius: 5,
                    pointBackgroundColor: "rgba(255, 255, 255, .8)",
                    pointBorderColor: "transparent",
                    borderColor: "rgba(255, 255, 255, .8)",
                    borderColor: "rgba(255, 255, 255, .8)",
                    borderWidth: 4,
                    backgroundColor: "transparent",
                    fill: true,
                    @*data: [@string.Join(",", Model.ClientCountForLastYear.Reverse().Select(x => x.Value).ToArray())],*@
                    maxBarThickness: 6

                }],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false,
                    }
                },
                interaction: {
                    intersect: false,
                    mode: 'index',
                },
                scales: {
                    y: {
                        grid: {
                            drawBorder: false,
                            display: true,
                            drawOnChartArea: true,
                            drawTicks: false,
                            borderDash: [5, 5],
                            color: 'rgba(255, 255, 255, .2)'
                        },
                        ticks: {
                            display: true,
                            color: '#f8f9fa',
                            padding: 10,
                            font: {
                                size: 14,
                                weight: 300,
                                family: "Roboto",
                                style: 'normal',
                                lineHeight: 2
                            },
                        }
                    },
                    x: {
                        grid: {
                            drawBorder: false,
                            display: false,
                            drawOnChartArea: false,
                            drawTicks: false,
                            borderDash: [5, 5]
                        },
                        ticks: {
                            display: true,
                            color: '#f8f9fa',
                            padding: 10,
                            font: {
                                size: 14,
                                weight: 300,
                                family: "Roboto",
                                style: 'normal',
                                lineHeight: 2
                            },
                        }
                    },
                },
            },
        });

        var ctx3 = document.getElementById("chart-line-tasks").getContext("2d");

        new Chart(ctx3, {
            type: "line",
            @*data: {
                labels: [@Html.Raw(string.Join(",", Model.MonthlyLeadPricesForLastYear.Reverse().Select(x => "'" + System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(x.Key).Substring(0,3).ToUpper() + "'").ToArray()))],
                datasets: [{
                    label: "Toplam Tutar",
                    tension: 0,
                    borderWidth: 0,
                    pointRadius: 5,
                    pointBackgroundColor: "rgba(255, 255, 255, .8)",
                    pointBorderColor: "transparent",
                    borderColor: "rgba(255, 255, 255, .8)",
                    borderWidth: 4,
                    backgroundColor: "transparent",
                    fill: true,
                    data: [@string.Join(",", Model.MonthlyLeadPricesForLastYear.Reverse().Select(x => x.Value).ToArray())],
                    maxBarThickness: 6

                }],
            },*@
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false,
                    }
                },
                interaction: {
                    intersect: false,
                    mode: 'index',
                },
                scales: {
                    y: {
                        grid: {
                            drawBorder: false,
                            display: true,
                            drawOnChartArea: true,
                            drawTicks: false,
                            borderDash: [5, 5],
                            color: 'rgba(255, 255, 255, .2)'
                        },
                        ticks: {
                            display: true,
                            padding: 10,
                            color: '#f8f9fa',
                            font: {
                                size: 14,
                                weight: 300,
                                family: "Roboto",
                                style: 'normal',
                                lineHeight: 2
                            },
                        }
                    },
                    x: {
                        grid: {
                            drawBorder: false,
                            display: false,
                            drawOnChartArea: false,
                            drawTicks: false,
                            borderDash: [5, 5]
                        },
                        ticks: {
                            display: true,
                            color: '#f8f9fa',
                            padding: 10,
                            font: {
                                size: 14,
                                weight: 300,
                                family: "Roboto",
                                style: 'normal',
                                lineHeight: 2
                            },
                        }
                    },
                },
            },
        });
    </script>
}